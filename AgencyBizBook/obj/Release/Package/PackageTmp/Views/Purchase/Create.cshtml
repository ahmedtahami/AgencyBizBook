@model AgencyBizBook.Models.PurchaseCreateViewModel
@{
    ViewBag.Title = "Create New Purchase";
}

<!-- Start content -->
<div class="content">
    <div class="container-fluid">
        <div class="page-title-box">
            <div class="row align-items-center">
                <div class="col-sm-6">
                    <h4 class="page-title">Purchases</h4>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-right">
                        <li class="breadcrumb-item"><a href="javascript:void(0);">BizBook</a></li>
                        <li class="breadcrumb-item"><a href="javascript:void(0);">Purchases</a></li>
                        <li class="breadcrumb-item active">Create New Purchase</li>
                    </ol>
                </div>
            </div> <!-- end row -->
        </div>
        <!-- end page-title -->
        <div class="row">
            <div class="col-lg-12">
                <div class="card m-b-30">
                    <div class="card-body">
                        <h4 class="mt-0 header-title">Add Product</h4>
                        <input name="index" id="index" type='hidden' value="0" />
                        <div class="row">
                            <div class="col-lg-4 form-group">
                                @Html.LabelFor(model => model.ProductId)
                                @Html.DropDownList("ProductId", null, "Select Product", htmlAttributes: new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-4 form-group">
                                @Html.LabelFor(model => model.Quantity)
                                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @placeholder = "Quantity", @min = "0" } })
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-4 form-group">
                                @Html.LabelFor(model => model.Rate)
                                @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Rate" } })
                                @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div>
                                <button type="submit" id="addRow" class="btn btn-primary waves-effect waves-light">
                                    Add To Purchase <span class="mdi mdi-cart-plus "></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div> <!-- end col -->
        </div>
        <div class="row">
            <div class="col-12">
                <div class="card m-b-30">
                    <div class="card-body">
                        @using (Html.BeginForm())
                        {
                        <h4 class="mt-0 header-title">Purchase Details</h4>
                            <table class="table table-bordered dt-responsive nowrap tblProducts">
                                <thead>
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.ProductId)</th>
                                        <th>@Html.DisplayNameFor(model => model.Quantity)</th>
                                        <th>@Html.DisplayNameFor(model => model.Rate)</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DriverId)
                                @Html.DropDownList("DriverId", null, "Select Driver", htmlAttributes: new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CokeInvoiceId)
                                @Html.EditorFor(model => model.CokeInvoiceId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Coke Invoice#", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.CokeInvoiceId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ShipmentNumber)
                                @Html.EditorFor(model => model.ShipmentNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Shipment Number", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.ShipmentNumber, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <div>
                                    <button type="submit" class="btn btn-primary waves-effect waves-light">
                                        Submit
                                    </button>
                                    <button type="reset" class="btn btn-secondary waves-effect m-l-5">
                                        Reset
                                    </button>
                                    <button type="button" class="btn btn-success waves-effect m-l-5">
                                        Back
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <!-- container-fluid -->
        </div>
    </div>
</div>
<!-- content -->